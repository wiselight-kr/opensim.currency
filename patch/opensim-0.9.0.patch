diff -Nur OpenSim-/Framework/Servers/HttpServer/BaseHttpServer.cs OpenSim/Framework/Servers/HttpServer/BaseHttpServer.cs
--- OpenSim-/Framework/Servers/HttpServer/BaseHttpServer.cs	2015-11-21 12:43:38.211163083 +0900
+++ OpenSim/Framework/Servers/HttpServer/BaseHttpServer.cs	2015-11-21 13:18:32.502530419 +0900
@@ -1097,6 +1097,10 @@
 
                         if (gridproxy)
                             xmlRprcRequest.Params.Add("gridproxy");  // Param[4]
+
+                        // by Fumi.Iseki for DTLNSLMoneyServer
+                        xmlRprcRequest.Params.Add(request.IHttpClientContext.SSLCommonName); // Param[4] or Param[5]
+
                         try
                         {
                             xmlRpcResponse = method(xmlRprcRequest, request.RemoteIPEndPoint);
diff -Nur OpenSim-/Framework/Servers/Tests/OSHttpTests.cs OpenSim/Framework/Servers/Tests/OSHttpTests.cs
--- OpenSim-/Framework/Servers/Tests/OSHttpTests.cs	2015-11-21 12:41:45.472764672 +0900
+++ OpenSim/Framework/Servers/Tests/OSHttpTests.cs	2015-11-21 13:19:43.767780350 +0900
@@ -60,6 +60,12 @@
                 _secured = secured;
             }
 
+            // by Fumi.Iseki for DTLNSLMoenyServer
+            public string SSLCommonName
+            {
+                get { return "";}
+            }
+
             public void Disconnect(SocketError error) {}
             public void Respond(string httpVersion, HttpStatusCode statusCode, string reason, string body) {}
             public void Respond(string httpVersion, HttpStatusCode statusCode, string reason) {}
diff -Nur OpenSim-/Tests/Common/Mock/TestHttpClientContext.cs OpenSim/Tests/Common/Mock/TestHttpClientContext.cs
--- OpenSim-/Tests/Common/Mock/TestHttpClientContext.cs	2015-11-21 12:43:38.211163083 +0900
+++ OpenSim/Tests/Common/Mock/TestHttpClientContext.cs	2015-11-21 13:19:16.311684058 +0900
@@ -71,6 +71,12 @@
 //            Console.WriteLine("TestHttpClientContext.Disconnect Received disconnect with status {0}", error);
         }
 
+        // by Fumi.Iseki for DTLNSLMoenyServer
+        public string SSLCommonName
+        {
+            get { return "";}
+        }
+
         public void Respond(string httpVersion, HttpStatusCode statusCode, string reason, string body) {Console.WriteLine("x");}
         public void Respond(string httpVersion, HttpStatusCode statusCode, string reason) {Console.WriteLine("xx");}
         public void Respond(string body) { Console.WriteLine("xxx");}
